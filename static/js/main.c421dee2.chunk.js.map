{"version":3,"sources":["styles/GlobalStyles.jsx","styles/header/HeaderStyles.jsx","components/header/HeaderFront.jsx","statics/URLS.js","components/header/HeaderBack.jsx","components/header/Header.jsx","styles/card1/Card1Styles.jsx","statics/UNITS.js","helpers/convertUnits.js","components/card1/CurrentWeatherCardFront.jsx","components/card1/CurrentWeatherCardBack.jsx","components/card1/CurrentWeatherCard.jsx","helpers/dateTime.js","components/card1/CityInfo.jsx","images/Settings-icon.png","components/card1/Card1.jsx","helpers/splitByHour.js","styles/card2/Card2Styles.jsx","components/card2/Front.jsx","components/card2/Back.jsx","components/card2/FlipCard.jsx","components/card2/Card2.jsx","components/card3/Graph.jsx","components/card3/Card3.jsx","statics/THEMES.jsx","statics/DEFAULTS.js","helpers/Storage.js","hooks/useStateWithAutoSave.jsx","hooks/useWeatherFetch.jsx","hooks/useCitySearch.jsx","hooks/useSystemThemeDetector.jsx","hooks/useTheme.jsx","hooks/useDynamicTitle.jsx","App.jsx","index.jsx"],"names":["GlobalStyles","createGlobalStyle","props","theme","background_color","color_primary","color_secondary","text_primary","text_secondary","text_important","form_placeholder","valid_input","invalid_input","HeaderStyle","styled","Card","HeaderFrontStyle","HeaderBackStyle","HeaderFront","className","weatherAPICallBaseURL","forecastAPICallBaseURL","placeHolderImageURL","HeaderBack","href","target","rel","Header","SettingsButton","button","UNITS","convertTemp","temp","unit","fractionDigits","toLocaleString","maximumFractionDigits","convertSpeed","speed","CurrentWeatherCardFront","Row","Col","customUIElements","pressure","weather","main","humidity","wind","cloudiness","clouds","all","minmax","temp_min","temp_max","feels","feels_like","src","icon","alt","width","height","class","description","CurrentWeatherCardBack","toggleCustomUI","name","setCustomUIElements","changeUnit","setUnit","changeTheme","setTheme","type","isCityValid","placeholder","onChange","e","setCitySearch","value","for","id","checked","disabled","useSystemTheme","setUseSystemTheme","lonlat","sun","CurrentWeatherCard","isFlipped","isFront","flipDirection","keys","prettifyDate","date","Date","weekDay","dayInNumber","CityInfo","sys","country","coord","lon","lat","sunrise","split","sunset","Card1","useState","setIsFront","onClick","settingsIconPath","splitByHour","stringHour","dt_txt","Card2Styles","CardFront","CardBack","Card2Front","allList","substring","dt","getDay","Card2Back","FlipCard","style","flex","Front","Back","Card2","forecast","list","map","withTheme","useEffect","days","push","buildGraphDataset","setDays","setTemperatureDataset","setHumidityDataset","setWindDataset","temperatureDataset","humidityDataset","windyDataset","tempInvisibility","setTempVisibility","humidityInvisibility","setHumidityVisibility","windInvisibility","visibilityFunctions","data","labels","datasets","label","hidden","backgroundColor","borderColor","fill","borderWidth","options","indexAxis","responsive","plugins","legend","position","evt","item","index","length","datasetIndex","color","font","size","scales","y","ticks","stepSize","x","Card3","THEMES","dark","light","DEFAULTS","storageNames","applicationName","city","storageDefaults","cityFormDebounceTime","weatherFetchInterval","Storage","saveName","defaults","this","newItems","items","getItemsFromStorage","localStorage","setItem","JSON","stringify","parse","getItem","getItemsFromStorageWithDefaultFallback","removeItem","useStateWithAutoSave","storageName","storage","getItemFromStorageWithDefaultFallback","addItemToStorage","useWeatherFetch","fetchInterval","setWeather","setForecast","fetchWeather","a","fetch","process","res","json","fetchForecast","fetchTimer","setInterval","console","log","clearInterval","useCitySearch","useDebounce","citySearch","setIsCityValid","setCity","cod","testCity","useSystemThemeDetector","window","matchMedia","matches","isDarkTheme","setIsDarkTheme","mqListener","darkThemeMq","addEventListener","removeEventListener","useTheme","isPreferredThemeDark","useDynamicTitle","document","title","App","Container","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c421dee2.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    :root {\r\n        --background-color: ${props => props.theme.background_color};        \r\n        --color-primary: ${props => props.theme.color_primary};\r\n        --color-secondary: ${props => props.theme.color_secondary};\r\n        \r\n        --text-primary: ${props => props.theme.text_primary};\r\n        --text-secondary: ${props => props.theme.text_secondary};\r\n        --text-important: ${props => props.theme.text_important};\r\n\r\n        --form-placeholder: ${props => props.theme.form_placeholder};\r\n        --valid-input: ${props => props.theme.valid_input};\r\n        --invalid-input: ${props => props.theme.invalid_input};\r\n    }\r\n\r\n    * {\r\n        margin: 0; \r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        list-style: none;\r\n        text-decoration: none;\r\n        font-size: 1.2rem;\r\n    }\r\n\r\n    body {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        background-color: var(--background-color) !important;\r\n        color: var(--text-primary);\r\n    }\r\n\r\n    .card {\r\n        border-radius: 15px !important;\r\n        border:0px;\r\n    }\r\n\r\n    .color-primary {\r\n        background-color: var(--color-primary);\r\n    }\r\n\r\n    .color-secondary {\r\n        background-color: var(--color-secondary);\r\n    }\r\n\r\n\r\n\r\n    .text-secondary {\r\n        color: var(--text-secondary) !important;\r\n    }\r\n\r\n    .text-important {\r\n        color: var(--text-important) !important;\r\n    }\r\n\r\n    a {\r\n        color: var(--color-secondary) !important;\r\n    }\r\n\r\n\r\n    /* bootstrap customizations */\r\n\r\n    .form-check-input:checked {\r\n        background-color: var(--text-important);\r\n        border-color: var(--text-important);\r\n    }\r\n\r\n    .form-check-input:focus {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n\r\n    .form-control:focus {\r\n        border-color: var(--text-important);\r\n        box-shadow: inset 0 0px 7px rgb(252, 252, 252), 0 0 7px var(--text-important);\r\n    }\r\n\r\n    .form-floating {\r\n        color: var(--form-placeholder);\r\n    }\r\n\r\n    .valid-feedback {\r\n        color: var(--valid-input) !important;\r\n    }\r\n\r\n    .invalid-feedback {\r\n        color: var(--invalid-input) !important;\r\n    }\r\n\r\n    .is-valid {\r\n        border-color: var(--valid-input) !important;\r\n        box-shadow: inset 0 0px 7px rgb(252, 252, 252), 0 0 10px var(--valid-input) !important;\r\n    }\r\n\r\n    .is-invalid {\r\n        border-color: var(--valid-input) !important;\r\n        box-shadow: inset 0 0px 7px rgb(252, 252, 252), 0 0 10px var(--invalid-input) !important;\r\n    }\r\n\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","// styled components\r\nimport styled from \"styled-components\";\r\n\r\n// bootstrap\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst HeaderStyle = styled(Card)`\r\n\r\n    /* theme */\r\n    color: ${ props  => props.theme.text_primary };\r\n    background-color: ${ props  => props.theme.background_color };\r\n\r\n    header{\r\n        font-family: \"Handlee\";\r\n    }\r\n\r\n    .flip-card { \r\n        perspective: 1000px;\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        backface-visibility: hidden;\r\n        transition: all .3s;\r\n    }\r\n    .flip-card .flip-card-wrap {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: transform 0.6s;\r\n        transform-style: preserve-3d;\r\n    }\r\n    \r\n    .flip-card:hover .flip-card-wrap {\r\n        transform: rotateX(-180deg);\r\n    }\r\n\r\n`;\r\n\r\nconst HeaderFrontStyle = styled(Card)`\r\n    /* theme */\r\n    color: ${ props  => props.theme.text_primary };\r\n    background-color: ${ props  => props.theme.background_color };\r\n    \r\n    width: 100%;\r\n    position: relative;\r\n    backface-visibility: hidden;\r\n    transition: all .3s;\r\n    text-align: center;\r\n`;\r\n\r\nconst HeaderBackStyle = styled(Card)`\r\n    /* theme */\r\n    color: ${ props  => props.theme.text_primary };\r\n    background-color: ${ props  => props.theme.background_color };\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    backface-visibility: hidden;\r\n    transition: all .3s;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    transform: rotateX(180deg);\r\n    /* bootstrap 5 sizes\r\n    <576px\txs\r\n    ≥576px\tsm\r\n    ≥768px\tmd\r\n    ≥992px\tlg\r\n    ≥1200px\txl\r\n    ≥1400px xxl */\r\n\r\n    @media (max-width: 780px) {\r\n        p{\r\n            font-size: 15px;\r\n        }\r\n        a{\r\n            font-size: 15px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 400px) {\r\n        p{\r\n            font-size: 12px;\r\n        }\r\n        a{\r\n            font-size: 12px;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport { HeaderFrontStyle, HeaderBackStyle, HeaderStyle };","// styled components\r\nimport { HeaderFrontStyle } from \"../../styles/header/HeaderStyles\" \r\n\r\nconst HeaderFront = () => {\r\n    return (\r\n        <HeaderFrontStyle className=\"header\">\r\n            <header className=\"display-4 align-self-center\">\r\n                WTForecast\r\n            </header>\r\n        </HeaderFrontStyle>\r\n    )\r\n}\r\n\r\nexport default HeaderFront;\r\n","const weatherAPICallBaseURL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst forecastAPICallBaseURL = \"https://api.openweathermap.org/data/2.5/forecast\";\r\n\r\nconst iconBaseURL = \"https://openweathermap.org/img/wn/\";\r\nconst placeHolderImageURL = \"https://raw.githubusercontent.com/cccaaannn/WTForecast/master/public/icons/icon-192x192.png\";\r\n\r\nconst projectURL = \"https://github.com/cccaaannn/WTForecast\";\r\n\r\nexport { weatherAPICallBaseURL, forecastAPICallBaseURL, iconBaseURL, placeHolderImageURL, projectURL };","// styled components\r\nimport { HeaderBackStyle } from \"../../styles/header/HeaderStyles\" \r\n\r\n// statics\r\nimport { projectURL } from \"../../statics/URLS\";\r\n\r\nconst HeaderBack = () => {\r\n    return (\r\n        <HeaderBackStyle className=\"header\">\r\n            <header className=\"h3 mb-0\">WTForecast</header>\r\n            <p>WTForecast is an <a className=\"text-decoration-none\" href={projectURL} target=\"_blank\" rel=\"noreferrer\">open source</a> weather application made with react.</p>\r\n        </HeaderBackStyle>\r\n    )\r\n}\r\n\r\nexport default HeaderBack;\r\n","// styled components\r\nimport { HeaderStyle } from \"../../styles/header/HeaderStyles\" \r\n\r\n// inner components\r\nimport HeaderFront from './HeaderFront'\r\nimport HeaderBack from './HeaderBack'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderStyle className=\"header p-3 mb-3\">\r\n            <div className=\"flip-card\">\r\n                <div className=\"flip-card-wrap\">\r\n                    <HeaderFront />\r\n                    <HeaderBack />\r\n                </div>        \r\n            </div>   \r\n        </HeaderStyle>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","// styled components\r\nimport styled from 'styled-components';\r\n\r\nconst SettingsButton = styled.button`\r\n    background: inherit;\r\n    color: inherit;\r\n    border: 0ch;\r\n    cursor: pointer;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:hover {\r\n        color: var(--button-color2);\r\n        border-color: var(--button-color2);\r\n        transform: rotate(15deg);\r\n    }\r\n    &:active {\r\n        transform: rotate(30deg);\r\n    }\r\n`;\r\n\r\nexport { SettingsButton }\r\n\r\n","const UNITS = {\r\n    \"metric\":{\r\n        \"temp\":\"˚C\", \r\n        \"wind\":\"m/s\",\r\n\r\n        \"cloudiness\": \"%\",\r\n        \"humidity\": \"%\",\r\n        \"pressure\": \"hPa\"\r\n    }, \r\n    \"imperial\":{\r\n        \"temp\":\"˚F\", \r\n        \"wind\":\"mph\",\r\n\r\n        \"cloudiness\": \"%\",\r\n        \"humidity\": \"%\",\r\n        \"pressure\": \"hPa\"\r\n    }\r\n}\r\n\r\nexport default UNITS;","function convertTemp({temp, unit=\"metric\", fractionDigits=1}){\r\n    // converts temp to metric or imperial from kelvin\r\n\r\n    // convert to Fahrenheit\r\n    if(unit === \"imperial\"){\r\n        temp = temp * 9/5 - 459.67;\r\n    }\r\n    // default is Celsius\r\n    else{\r\n        temp = temp - 272.15;\r\n    }\r\n    temp = temp.toLocaleString('en-US', {maximumFractionDigits:fractionDigits});\r\n    return temp\r\n}\r\n\r\nfunction convertSpeed({speed, unit=\"metric\", fractionDigits=1}){\r\n    // converts m/s to mph\r\n\r\n    // convert to mph\r\n    if(unit === \"imperial\"){\r\n        speed = speed * 2.23694;\r\n    }\r\n\r\n    speed = speed.toLocaleString('en-US', {maximumFractionDigits:fractionDigits});\r\n    return speed\r\n}\r\n\r\n\r\nexport { convertTemp, convertSpeed };\r\n","// bootstrap\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\n\r\n// statics\r\nimport UNITS from \"../../statics/UNITS\";\r\nimport { iconBaseURL, placeHolderImageURL } from \"../../statics/URLS\";\r\n\r\n// helpers\r\nimport { convertTemp, convertSpeed } from \"../../helpers/convertUnits\";\r\n\r\n\r\nconst CurrentWeatherCardFront = (props) => {\r\n    return (\r\n        <Card className=\"color-secondary p-3\">\r\n\r\n            <Row>\r\n                <Col className=\"col-xxl-10 col-xl-10 col-lg-9 col-md-9 col-sm-8 col-12 align-self-center\">\r\n                    {/* other temp elements */}\r\n                    <Row>\r\n                        {\r\n                            props.customUIElements.pressure ?\r\n                                <Col className=\"col-md-auto\">\r\n                                    <p className=\"text-important h6 mb-0 text-center\">Pressure</p><p className=\"text-center\"><small>{props.weather.weather ? props.weather.main.pressure : \"-\"}{UNITS[props.unit].pressure}</small></p>\r\n                                </Col>\r\n                                : \"\"\r\n                        }\r\n                        {\r\n                            props.customUIElements.humidity ?\r\n                                <Col className=\"col-md-auto\">\r\n                                    <p className=\"text-important h6 mb-0 text-center\">Humidity</p><p className=\"text-center\"><small>{props.weather.weather ? props.weather.main.humidity : \"-\"}{UNITS[props.unit].humidity}</small></p>\r\n                                </Col>\r\n                                : \"\"\r\n                        }\r\n                        {\r\n                            props.customUIElements.wind ?\r\n                                <Col className=\"col-md-auto\">\r\n                                    <p className=\"text-important h6 mb-0 text-center\">Wind</p><p className=\"text-center\"><small>{props.weather.wind ? convertSpeed({ speed: props.weather.wind.speed, unit: props.unit }) : \"-\"}{UNITS[props.unit].wind}</small></p>\r\n                                </Col>\r\n                                : \"\"\r\n                        }\r\n                        {\r\n                            props.customUIElements.cloudiness ?\r\n                                <Col className=\"col-md-auto\">\r\n                                    <p className=\"text-important h6 mb-0 text-center\">Cloudiness</p><p className=\"text-center\"><small>{props.weather.clouds ? props.weather.clouds.all : \"-\"}{UNITS[props.unit].cloudiness}</small></p>\r\n                                </Col>\r\n                                : \"\"\r\n                        }\r\n                    </Row>\r\n\r\n                    {/* main temp */}\r\n                    <Row>\r\n                        <Col className=\"col-md-auto text-center\">\r\n                            <h1 className=\"display-1\">{props.weather.main ? convertTemp({ temp: props.weather.main.temp, unit: props.unit }) + UNITS[props.unit].temp : \"-\"}</h1>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* sub temp elements */}\r\n                    <Row>\r\n                        {\r\n                            props.customUIElements.minmax ?\r\n                                <>\r\n                                    <Col className=\"col-md-auto\">\r\n                                        <p className=\"text-important h6 mb-0 text-center\">Min</p><p className=\"text-center mb-0\"><small>{props.weather.weather ? convertTemp({ temp: props.weather.main.temp_min, unit: props.unit, fractionDigits: 0 }) + UNITS[props.unit].temp : \"-\"}</small></p>\r\n                                    </Col>\r\n                                    <Col className=\"col-md-auto\">\r\n                                        <p className=\"text-important h6 mb-0 text-center\">Max</p><p className=\"text-center mb-0\"><small>{props.weather.weather ? convertTemp({ temp: props.weather.main.temp_max, unit: props.unit, fractionDigits: 0 }) + UNITS[props.unit].temp : \"-\"}</small></p>\r\n                                    </Col>\r\n                                </>\r\n                                : \"\"\r\n                        }\r\n                        {\r\n                            props.customUIElements.feels ?\r\n                                <Col className=\"col-md-auto\">\r\n                                    <p className=\"text-important h6 mb-0 text-center\">Feels</p><p className=\"text-center mb-0\"><small>{props.weather.main ? convertTemp({ temp: props.weather.main.feels_like, unit: props.unit, fractionDigits: 0 }) + UNITS[props.unit].temp : \"-\"}</small></p>\r\n                                </Col>\r\n                                : \"\"\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n\r\n                {/* temp description and image */}\r\n                <Col className=\"col-xxl-2 col-xl-2 col-lg-3 col-md-3 col-sm-4 align-self-center\"> {/* col-6 */}\r\n                    <Card className=\"color-secondary\">\r\n                        <img className=\"align-self-center\" src={props.weather.weather ? iconBaseURL + props.weather.weather[0].icon + \"@2x.png\" : placeHolderImageURL} alt=\"weather icon\" width=\"100\" height=\"100\"></img>\r\n                        <div class=\"card-body\">\r\n                            <p className=\"h5 text-center\">{props.weather.weather ? props.weather.weather[0].description : \"-\"}</p>\r\n                            {/* <h6 className=\"text-center\">thunderstorm with heavy drizzle</h6> */}\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default CurrentWeatherCardFront;\r\n","// bootstrap\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\n\r\nconst CurrentWeatherCardBack = (props) => {\r\n\r\n    const toggleCustomUI = (name) => {\r\n        // checkbox id's used as name\r\n        props.setCustomUIElements({ ...props.customUIElements, [name]: !props.customUIElements[name] });\r\n    }\r\n\r\n    const changeUnit = (unit) => {\r\n        // checkbox id's used as unit\r\n        props.setUnit(unit);\r\n    }\r\n\r\n    const changeTheme = (theme) => {\r\n        // checkbox id's used as unit\r\n        props.setTheme(theme);\r\n    }\r\n\r\n    const changeUseSystemTheme = () => {\r\n        // toggle useSystemTheme\r\n        props.setUseSystemTheme(!props.useSystemTheme);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"color-secondary p-3\">\r\n            <Row>\r\n\r\n                {/* city selection */}\r\n                <Col className=\"col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                    <p className=\"h4\">Choose City</p>\r\n                    <div className=\"form-floating mb-3\"> {/* if value isCityValid is unset show no message if it is set show error or success messages */}\r\n                        <input type=\"text\" className={`form-control ${props.isCityValid}`} placeholder=\"City\" aria-label=\"city-selection\" aria-describedby=\"city-selection\"\r\n                            onChange={(e) => props.setCitySearch(e.target.value)} />\r\n                        <label for=\"city-selection\" className=\"form-label\">Search City</label>\r\n\r\n                        <div className=\"valid-feedback\">\r\n                            City Found!\r\n                        </div>\r\n                        <div className=\"invalid-feedback\">\r\n                            City Not Found\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n\r\n                {/* Unit selection */}\r\n                <Col className=\"col-xxl-3 col-xl-3 col-lg-6 col-md-6 col-sm-0 col-0\">\r\n                    <p className=\"h4\">Choose Unit</p>\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" id=\"metric\" name=\"unitRadio\"\r\n                            checked={props.unit === \"metric\" ? \"checked\" : \"\"}\r\n                            onChange={(e) => changeUnit(e.target.id)} />\r\n\r\n                        <label className=\"form-check-label\" for=\"metric\">\r\n                            Metric\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" id=\"imperial\" name=\"unitRadio\"\r\n                            checked={props.unit === \"imperial\" ? \"checked\" : \"\"}\r\n                            onChange={(e) => changeUnit(e.target.id)} />\r\n\r\n                        <label className=\"form-check-label\" for=\"imperial\">\r\n                            Imperial\r\n                        </label>\r\n                    </div>\r\n                </Col>\r\n\r\n                {/* theme selection */}\r\n                <Col className=\"col-xxl-3 col-xl-3 col-lg-6 col-md-6 col-sm-0 col-0\">\r\n                    <p className=\"h4\">Choose Theme</p>\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" id=\"light\" name=\"themeRadio\"\r\n                            checked={props.theme === \"light\" ? \"checked\" : \"\"}\r\n                            onChange={(e) => changeTheme(e.target.id)}\r\n\r\n                            // disable if useSystemTheme selected\r\n                            disabled={props.useSystemTheme === true ? \"disabled\" : \"\"} />\r\n\r\n                        <label className=\"form-check-label\" for=\"light\">\r\n                            Light\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" id=\"dark\" name=\"themeRadio\"\r\n                            checked={props.theme === \"dark\" ? \"checked\" : \"\"}\r\n                            onChange={(e) => changeTheme(e.target.id)}\r\n\r\n                            // disable if useSystemTheme selected\r\n                            disabled={props.useSystemTheme === true ? \"disabled\" : \"\"} />\r\n\r\n                        <label className=\"form-check-label\" for=\"dark\">\r\n                            Dark\r\n                        </label>\r\n                    </div>\r\n\r\n                    {/* use system theme */}\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"useSystemTheme\"\r\n                            checked={props.useSystemTheme === true ? \"checked\" : \"\"}\r\n                            onChange={(e) => changeUseSystemTheme()} />\r\n\r\n                        <label class=\"form-check-label\" for=\"useSystemTheme\">\r\n                            Use system\r\n                        </label>\r\n                    </div>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            {/* ui customization */}\r\n            <Row>\r\n                {/* other temp elements */}\r\n                <p className=\"h4 mt-2\">Customize Look</p>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"pressure\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.pressure ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"pressure\">Pressure</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"humidity\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.humidity ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"humidity\">Humidity</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"wind\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.wind ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"wind\">Wind</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"cloudiness\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.cloudiness ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"cloudiness\">Cloudiness</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                {/* min max - feels like */}\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"minmax\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.minmax ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"minmax\">Min Max</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"feels\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.feels ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"feels\">Feels like</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                {/* lon lat - sun */}\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"lonlat\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.lonlat ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"lonlat\">Lon Lat</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"form-check form-switch\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"sun\"\r\n                                    onChange={(e) => toggleCustomUI(e.target.id)}\r\n                                    checked={props.customUIElements.sun ? \"checked\" : \"\"} />\r\n                                <label class=\"form-check-label\" for=\"sun\">Sunrise/set</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default CurrentWeatherCardBack;\r\n","// react card flip\r\nimport ReactCardFlip from 'react-card-flip';\r\n\r\n// inner components\r\nimport CurrentWeatherCardFront from './CurrentWeatherCardFront';\r\nimport CurrentWeatherCardBack from './CurrentWeatherCardBack';\r\n\r\n\r\nconst CurrentWeatherCard = (props) => {\r\n    return (\r\n        <ReactCardFlip isFlipped={props.isFront} flipDirection=\"vertical\">\r\n\r\n            <CurrentWeatherCardFront keys=\"front\" \r\n                weather={props.weather} \r\n\r\n                unit={props.unit} \r\n\r\n                customUIElements={props.customUIElements}\r\n            />\r\n\r\n            <CurrentWeatherCardBack keys=\"back\" \r\n                isCityValid={props.isCityValid} \r\n                setCitySearch={props.setCitySearch} \r\n\r\n                unit={props.unit} \r\n                setUnit={props.setUnit} \r\n                \r\n                customUIElements={props.customUIElements} \r\n                setCustomUIElements={props.setCustomUIElements}\r\n\r\n                theme={props.theme}\r\n                setTheme={props.setTheme}\r\n\r\n                useSystemTheme={props.useSystemTheme}\r\n                setUseSystemTheme={props.setUseSystemTheme}\r\n            />\r\n\r\n        </ReactCardFlip>\r\n    )\r\n}\r\n\r\nexport default CurrentWeatherCard;\r\n","function prettifyDate(date){\r\n    let d = new Date(date * 1000);\r\n    // return d.toLocaleString(\"tr\");\r\n    return d.toLocaleString();\r\n}\r\n\r\nfunction weekDay(dayInNumber){\r\n    const weekDays = {0: \"Sunday\", \r\n                    1: \"Monday\", \r\n                    2: \"Tuesday\",\r\n                    3: \"Wednesday\", \r\n                    4: \"Thursday\", \r\n                    5: \"Friday\",\r\n                    6: \"Saturday\",\r\n                    };\r\n    return weekDays[dayInNumber];\r\n}\r\n\r\nexport { prettifyDate, weekDay };\r\n","// bootstrap\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\n// helpers\r\nimport { prettifyDate } from \"../../helpers/dateTime\";\r\n\r\n\r\nconst CityInfo = (props) => {\r\n    return (\r\n        <>\r\n            {/* city - country */}\r\n            <p className=\"display-6 mb-0\">{props.weather.name ? props.weather.name : \"-\"} {props.weather.sys ? props.weather.sys.country : \"-\"}</p>\r\n\r\n            {/* city lon-lat */}\r\n            <Row className=\"row-cols-auto\">\r\n                {\r\n                    props.customUIElements.lonlat ?\r\n                        <>\r\n                            <Col className=\"pe-0\">\r\n                                <p className=\"h6 mb-1\"><small className=\"text-secondary\">Lon:{props.weather.coord ? props.weather.coord.lon : \"-\"}</small></p>\r\n                            </Col>\r\n                            <Col>\r\n                                <p className=\"h6 mb-1\"><small className=\"text-secondary\">Lat:{props.weather.coord ? props.weather.coord.lat : \"-\"}</small></p>\r\n                            </Col>\r\n                        </>\r\n                        : \"\"\r\n                }\r\n            </Row>\r\n\r\n            {/* sunrise - sunset */}\r\n            <Row className=\"row-cols-auto\">\r\n                {\r\n                    props.customUIElements.sun ?\r\n                        <>\r\n                            <Col className=\"pe-0\">\r\n                                <p className=\"h6 mb-0\"><small className=\"text-secondary\">Sunrise:{props.weather.sys ? prettifyDate(props.weather.sys.sunrise).split(\", \")[1] : \"-\"}</small></p>\r\n                            </Col>\r\n                            <Col>\r\n                                <p className=\"h6 mb-0\"><small className=\"text-secondary\">Sunset:{props.weather.sys ? prettifyDate(props.weather.sys.sunset).split(\", \")[1] : \"-\"}</small></p>\r\n                            </Col>\r\n                        </>\r\n                        : \"\"\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CityInfo;\r\n","export default __webpack_public_path__ + \"static/media/Settings-icon.d2ca648e.png\";","// react\r\nimport { useState } from 'react'\r\n\r\n// bootstrap\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\n\r\n// styled components\r\nimport { SettingsButton } from \"../../styles/card1/Card1Styles.jsx\"\r\n\r\n// inner components\r\nimport CurrentWeatherCard from \"./CurrentWeatherCard\"\r\nimport CityInfo from \"./CityInfo\"\r\n\r\n// settings button image\r\nimport settingsIconPath from \"../../images/Settings-icon.png\"\r\n\r\nconst Card1 = (props) => {\r\n\r\n    // card flipper state\r\n    const [isFront, setIsFront] = useState(false);\r\n    const toggleSettingsMenu = () => {\r\n        setIsFront(!isFront);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"color-primary p-3\">\r\n            {/* settings button */}\r\n            <Row>\r\n                <Col className=\"col-xxl-10 col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10\">\r\n                    <CityInfo weather={props.weather} customUIElements={props.customUIElements} />\r\n                </Col>\r\n                <Col className=\"col-xxl-2 col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2\">\r\n                    <SettingsButton className=\"float-end\" onClick={toggleSettingsMenu}><p className=\"display-6\"><img className=\"m-0 p-0\" src={settingsIconPath} alt=\"settings_icon\" width=\"42\" height=\"42\"></img></p></SettingsButton>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* inner card */}\r\n            <Row className=\"mt-2\">\r\n                <Col>\r\n                    <CurrentWeatherCard\r\n                        weather={props.weather}\r\n\r\n                        isFront={isFront}\r\n\r\n                        isCityValid={props.isCityValid}\r\n                        setCitySearch={props.setCitySearch}\r\n\r\n                        unit={props.unit}\r\n                        setUnit={props.setUnit}\r\n\r\n                        customUIElements={props.customUIElements}\r\n                        setCustomUIElements={props.setCustomUIElements}\r\n\r\n                        theme={props.theme}\r\n                        setTheme={props.setTheme}\r\n\r\n                        useSystemTheme={props.useSystemTheme}\r\n                        setUseSystemTheme={props.setUseSystemTheme}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default Card1;\r\n","export const splitByHour = (weather, stringHour) => {\r\n    if(weather.dt_txt.split(\" \")[1].split(\":\")[0] === stringHour){\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}","// styled components\r\nimport styled from \"styled-components\";\r\n\r\n// bootstrap\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Card2Styles = styled(Card)`\r\n    .flipcard {\r\n        perspective: 1000px;\r\n        z-index: 2;\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        backface-visibility: hidden;\r\n        transition: all .3s;\r\n        text-align: center;\r\n    }\r\n\r\n    .flipcard .flipcard-wrap {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: center;\r\n        transition: transform 0.6s;\r\n        transform-style: preserve-3d;\r\n    }\r\n\r\n    .flipcard:hover .flipcard-wrap {\r\n        transform: rotateY(-180deg);\r\n    }\r\n`;\r\n\r\nconst CardFront = styled(Card)`\r\n    width: 100%;\r\n    position: relative;\r\n    backface-visibility: hidden;\r\n    transition: all .3s;\r\n    text-align: center;\r\n`;\r\n\r\nconst CardBack = styled(Card)`\r\n    width: 100%;\r\n    height: 100%;\r\n    backface-visibility: hidden;\r\n    transition: all .3s;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    transform: rotateY(180deg);\r\n`;\r\n\r\nexport {Card2Styles, CardFront, CardBack};","import { convertTemp } from \"../../helpers/convertUnits\"\r\nimport UNITS from \"../../statics/UNITS\";\r\nimport { weekDay } from \"../../helpers/dateTime\";\r\nimport { CardFront } from \"../../styles/card2/Card2Styles\"\r\nimport { placeHolderImageURL } from \"../../statics/URLS\";\r\nconst Card2Front = (props) => {\r\n    return (\r\n        <CardFront className=\"color-secondary p-3 px-2 mx-md-6 col-6 col-sm-5 mt-md-0 col-lg-2 col-xl-2 col-xxl-2.5\">\r\n            <p className=\"h5\">{props.allList.dt_txt ? props.allList.dt_txt.split(\" \")[0].substring(5) : \"-\"}</p>\r\n            <h6 className=\"h6 text-important\">{props.allList.dt ? (weekDay(new Date(props.allList.dt * 1000).getDay())) : \"-\"}</h6>\r\n            <div className=\"mb-2\">\r\n                <img src={props.allList.weather ? `https://openweathermap.org/img/wn/${props.allList.weather[0].icon}@2x.png` : placeHolderImageURL} alt='tempIcon' width=\"100\"></img>\r\n            </div>\r\n            <p className=\"h4 mb-0 mt-0 pb-md-2\">{props.allList.main ? convertTemp({ temp: props.allList.main.temp, unit: props.unit }) + UNITS[props.unit].temp : \"-\"}</p>\r\n        </CardFront>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Card2Front;\r\n","import { convertSpeed, convertTemp } from \"../../helpers/convertUnits\"\r\nimport UNITS from \"../../statics/UNITS\";\r\n\r\nimport { Row } from 'react-bootstrap'\r\nimport { CardBack } from \"../../styles/card2/Card2Styles\"\r\n\r\nconst Card2Back = (props) => {\r\n    return (\r\n\r\n        <CardBack className=\"card-back color-secondary align-items-center p-2 mx-md-6 px-2 col-6 col-sm-5 col-sm-4 col-xl-2 mt-md-0 col-lg-2 col-xxl-2.5 mb-0 mt-0\">\r\n            <Row>\r\n                <h6 className=\"text-important mb-0 mt-1\">Feels</h6>\r\n                <p className=\"h5 mb-1\">{props.allList.main ? convertTemp({ temp: props.allList.main.feels_like, fractionDigits: 0, unit: props.unit }) + UNITS[props.unit].temp : \"-\"}</p>\r\n            </Row>\r\n            <Row>\r\n                <h6 className=\"text-important mb-1\">Humidity</h6>\r\n                <p className=\"h5 mb-0\">{props.allList.main ? props.allList.main.humidity + UNITS[props.unit].humidity : \"-\"}</p>\r\n            </Row>\r\n            <Row className=\"pt-1\">\r\n                <h6 className=\"text-important mb-0\">Wind</h6>\r\n                <p className=\"h5 mb-0\">{props.allList.main ? convertSpeed({ speed: props.allList.wind.speed, unit: props.unit }) + UNITS[props.unit].wind : \"-\"}</p>\r\n            </Row>\r\n            <Row >\r\n                <h6 className=\"text-important mb-0\">Cloudiness</h6>\r\n                <p className=\"h5 mb-0\">{props.allList.main ? props.allList.clouds.all + UNITS[props.unit].cloudiness : \"-\"}</p>\r\n            </Row>\r\n\r\n        </CardBack>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Card2Back;\r\n","import Front from \"./Front\";\r\nimport Back from \"./Back\";\r\nimport {Col} from 'react-bootstrap';\r\n\r\nconst FlipCard = (props) => {\r\n    return (\r\n        <Col className=\"p-2 col-auto col-sm-4 col-md-4 col-lg-2 col-xl-2 col-xxl-2\" style={{flex:1}}>\r\n            <div className=\"flipcard\">\r\n                <div className=\"flipcard-wrap\">\r\n                    <Front allList={props.weather} unit={props.unit}/>\r\n                    <Back allList={props.weather} unit={props.unit}/>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default FlipCard;\r\n\r\n","import { splitByHour } from \"../../helpers/splitByHour\";\r\nimport { Row } from 'react-bootstrap';\r\nimport { Card2Styles } from \"../../styles/card2/Card2Styles\"\r\nimport FlipCard from \"./FlipCard\";\r\n\r\nconst Card2 = (props) => {\r\n    let dummyWeather = [0, 1, 2, 3, 4];\r\n    return (\r\n        <Card2Styles className=\"color-primary mt-3\">\r\n            <Row className=\"g-md-3 p-3 g-ml-3 justify-content-center\">\r\n                {props.forecast.list ? props.forecast.list.map((weather) =>\r\n                    //get data by time 12:00:00, \r\n                    splitByHour(weather, \"12\") ?\r\n                        <FlipCard weather={weather} unit={props.unit} /> : \"\")\r\n                    //create dummyWeather create empty cards\r\n                    : dummyWeather.map((weather) =>\r\n                        <FlipCard weather={weather} unit={props.unit} />\r\n                    )}\r\n            </Row>\r\n        </Card2Styles>\r\n    )\r\n}\r\nexport default Card2;\r\n","import { Line } from 'react-chartjs-2';\r\nimport { splitByHour } from \"../../helpers/splitByHour\";\r\nimport { weekDay } from \"../../helpers/dateTime\";\r\nimport { convertTemp, convertSpeed } from \"../../helpers/convertUnits\"\r\nimport { useEffect, useState } from 'react'\r\nimport UNITS from \"../../statics/UNITS\";\r\nimport { withTheme } from 'styled-components';\r\n\r\n\r\nconst Graph = (props) => {\r\n\tconst buildGraphDataset = () => {\r\n\t\tlet days = [], temp = [], humidity = [], wind = [];\r\n\r\n\t\tif (props.allList.list) {\r\n\t\t\tprops.allList.list.map((weather) => {\r\n\t\t\t\tif (splitByHour(weather, \"12\")) {\r\n\t\t\t\t\tdays.push(weekDay(new Date(weather.dt * 1000).getDay()));\r\n\t\t\t\t\ttemp.push(convertTemp({ temp: weather.main.temp, unit: props.unit }));\r\n\t\t\t\t\thumidity.push(weather.main.humidity);\r\n\t\t\t\t\twind.push(convertSpeed({ speed: weather.wind.speed, unit: props.unit }));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn { days: days, temp: temp, humidity: humidity, wind: wind }\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { days, temp, humidity, wind } = buildGraphDataset();\r\n\t\tsetDays(days);\r\n\t\tsetTemperatureDataset(temp);\r\n\t\tsetHumidityDataset(humidity);\r\n\t\tsetWindDataset(wind)\r\n\t}, [props.allList, props.unit]);\r\n\r\n\tconst [days, setDays] = useState('');\r\n\tconst [temperatureDataset, setTemperatureDataset] = useState('');\r\n\tconst [humidityDataset, setHumidityDataset] = useState('');\r\n\tconst [windyDataset, setWindDataset] = useState('');\r\n\r\n\tconst [tempInvisibility, setTempVisibility] = useState(false);\r\n\tconst [humidityInvisibility, setHumidityVisibility] = useState(true);\r\n\tconst [windInvisibility, setWindVisibility] = useState(true);\r\n\r\n\tconst visibilityFunctions = [setTempVisibility, setHumidityVisibility, setWindVisibility];\r\n\r\n\tconst data = {\r\n\t\tlabels: days,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tlabel: 'Temperature' + UNITS[props.unit].temp,\r\n\t\t\t\thidden: tempInvisibility,\r\n\t\t\t\tbackgroundColor: props.theme.color_secondary,\r\n\t\t\t\tborderColor: props.theme.text_important,\r\n\t\t\t\tdata: temperatureDataset,\r\n\t\t\t\tfill: true\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tlabel: 'Humidity ' + UNITS[props.unit].humidity,\r\n\t\t\t\thidden: humidityInvisibility,\r\n\t\t\t\tbackgroundColor: props.theme.color_secondary,\r\n\t\t\t\tborderColor: props.theme.text_important,\r\n\t\t\t\tdata: humidityDataset,\r\n\t\t\t\tborderWidth: 2,\r\n\t\t\t\tfill: true,\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tlabel: 'Wind ' + UNITS[props.unit].wind,\r\n\t\t\t\thidden: windInvisibility,\r\n\t\t\t\tbackgroundColor: props.theme.color_secondary,\r\n\t\t\t\tborderColor: props.theme.text_important,\r\n\t\t\t\tdata: windyDataset,\r\n\t\t\t\tborderWidth: 2,\r\n\t\t\t\tfill: true,\r\n\t\t\t}\r\n\r\n\t\t],\r\n\t};\r\n\r\n\r\n\tconst options = {\r\n\t\t// change legend color example  https://stackoverflow.com/questions/37292423/chart-js-label-color\r\n\r\n\t\tindexAxis: 'x',\r\n\t\tresponsive: true,\r\n\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tposition: 'top',\r\n\t\t\t\tonClick: function (evt, item) {\r\n\t\t\t\t\tfor (let index = 0; index < data.datasets.length; index++) {\r\n\t\t\t\t\t\tvisibilityFunctions[index](true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvisibilityFunctions[item.datasetIndex](false);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcolor: props.theme.text_primary,\r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t\tsize: 20\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\ty: {\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tstepSize: 3,\r\n\t\t\t\t\tcolor: props.theme.text_primary,\r\n\t\t\t\t\t// beginAtZero: true,\r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t\tsize: 20\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tx: {\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\tcolor: props.theme.text_primary,\r\n\t\t\t\t\t// beginAtZero: true,\t\t\t\t\t\t\r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t\tsize: 20\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Line data={ data } options={ options } />\r\n\t);\r\n}\r\n\r\n// withTheme is for using global styles here\r\nexport default withTheme(Graph);\r\n","import React from 'react';\r\nimport Graph from './Graph';\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst Card3 = (props) => {\r\n\treturn (\r\n\t\t<Card className=\"color-primary mt-3 pb-2 mb-3\">\r\n\t\t\t<Graph allList={props.forecast} unit={props.unit} />\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Card3;\r\n","const THEMES = {\r\n\r\n    dark: {\r\n        // general\r\n        background_color: \"#222831\",        \r\n        color_primary: \"#393E46\",\r\n        color_secondary: \"#017f85\",\r\n\r\n        // text\r\n        text_primary: \"#eee\",\r\n        text_secondary: \"#919191\",\r\n        text_important: \"#00bdb6\",\r\n        \r\n        // form\r\n        form_placeholder: \"#919191\",\r\n        valid_input: \"#08ceff\",\r\n        invalid_input: \"#ff006acc\"\r\n    },\r\n\r\n    light: {\r\n        // general\r\n        background_color: \"#bef2ffb9\",        \r\n        color_primary: \"#00B7C2\",\r\n        color_secondary: \"#128494\",\r\n\r\n        // text\r\n        text_primary: \"#3c3c3c\",\r\n        text_secondary: \"#ffffff\",\r\n        text_important: \"#43ff39a2\",\r\n\r\n        // form\r\n        form_placeholder: \"#919191\",\r\n        valid_input: \"#43ff39a2\",\r\n        invalid_input: \"#ff0077ce\"\r\n    }\r\n\r\n}\r\nexport default THEMES;","const DEFAULTS = {\r\n\r\n    storageNames:{\r\n        // items will be stored with this names on the storage \r\n        applicationName: \"WTForecast\",\r\n\r\n        customUIElements: \"customUIElements\",\r\n        unit: \"unit\",\r\n        city: \"city\",\r\n        theme: \"theme\",\r\n        useSystemTheme: \"useSystemTheme\"\r\n    },\r\n\r\n    storageDefaults: {\r\n        // default values for storage items\r\n        \"customUIElements\": {\r\n            \"pressure\": true,\r\n            \"humidity\": true,\r\n            \"wind\": true,\r\n            \"cloudiness\": true,\r\n            \"minmax\": true,\r\n            \"feels\": true,\r\n            \"lonlat\": true,\r\n            \"sun\": true\r\n        },\r\n\r\n        \"unit\": \"metric\",\r\n        \"city\": \"istanbul\",\r\n        \"theme\": \"light\",\r\n        \"useSystemTheme\": true\r\n    },\r\n\r\n    // other defaults\r\n    cityFormDebounceTime: 1000,\r\n    weatherFetchInterval: 1000 * 60 * 60 // 1 hour\r\n}\r\n\r\nexport default DEFAULTS;","class Storage{\r\n\r\n    constructor(saveName, defaults){\r\n        // saveName = name for local storage\r\n        // defaults = all defaults as json object\r\n\r\n        this.saveName = saveName;\r\n        this.defaults = defaults;\r\n    }\r\n\r\n    // ---------- set ---------- //\r\n\r\n    addItemToStorage(newItems){\r\n        // adds new items to local storage\r\n\r\n        let items = this.getItemsFromStorage();\r\n        localStorage.setItem(this.saveName, JSON.stringify({...items, ...newItems}));\r\n    }\r\n\r\n    // ---------- ---------- ---------- //\r\n\r\n\r\n\r\n    // ---------- get ---------- //\r\n\r\n    getItemsFromStorage(){\r\n        // returns all values from the storage\r\n\r\n        let items = JSON.parse(localStorage.getItem(this.saveName));\r\n        return items;\r\n    }\r\n\r\n    getItemsFromStorageWithDefaultFallback(){\r\n        // returns all values from storage, if not exists returns all defaults\r\n\r\n        const items = JSON.parse(localStorage.getItem(this.saveName));\r\n        if(items === null){\r\n            return this.defaults;\r\n        }\r\n        else{\r\n            return items;\r\n        }\r\n    }   \r\n\r\n    getItemFromStorageWithDefaultFallback(item){\r\n        // returns the value for an item from storage, if not exists returns default value for that item\r\n\r\n        return this.getItemsFromStorageWithDefaultFallback()[item];\r\n    }   \r\n\r\n    // ---------- ---------- ---------- //\r\n\r\n\r\n\r\n    // ---------- delete ---------- //\r\n\r\n    deleteItemFromStorage(item){\r\n        // deletes an item from storage\r\n\r\n        const items = this.getItemsFromStorage();\r\n        if(item in items){\r\n            delete items[item];\r\n            localStorage.setItem(this.saveName, JSON.stringify(items));\r\n        }\r\n    }\r\n\r\n    clearStorage(){\r\n        // deletes all items from local storage \r\n\r\n        localStorage.removeItem(this.saveName);\r\n    }\r\n\r\n    // ---------- ---------- ---------- //\r\n\r\n\r\n\r\n    // ---------- utilities ---------- //\r\n\r\n    isTherePreviousSave(){\r\n        // checks if any item exists on local storage\r\n\r\n        if(localStorage.getItem(this.saveName) === null){\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    isTherePreviousSavedItem(item){\r\n        // checks if 'item' exists on local storage\r\n\r\n        const items = localStorage.getItem(this.saveName);\r\n        if(items === null){\r\n            return false;\r\n        }\r\n        else{\r\n            if(item in items){\r\n                return true;\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // ---------- ---------- ---------- //\r\n\r\n\r\n}\r\n\r\n\r\nexport default Storage;\r\n","// react\r\nimport { useState, useEffect } from 'react';\r\n\r\n// statics\r\nimport DEFAULTS from \"../statics/DEFAULTS\";\r\n\r\n// helpers\r\nimport Storage from '../helpers/Storage';\r\n\r\nconst useStateWithAutoSave = (storageName) => {\r\n    // custom hook for creating a stateful element and auto saving it into local storage on change\r\n    // uses storage class\r\n\r\n    // init storage object with default values\r\n    const storage = new Storage(DEFAULTS.storageNames.applicationName, DEFAULTS.storageDefaults);\r\n\r\n    const [item, setItem] = useState(storage.getItemFromStorageWithDefaultFallback(storageName)); // getItemFromStorageWithDefaultFallback returns something all the time\r\n\r\n    useEffect(() => {\r\n\t\tstorage.addItemToStorage({ [storageName]: item });\r\n\t}, [item])\r\n\r\n    return [item, setItem];\r\n}\r\n\r\nexport default useStateWithAutoSave;","// react\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// statics\r\nimport { weatherAPICallBaseURL, forecastAPICallBaseURL } from \"../statics/URLS\";\r\n\r\nconst useWeatherFetch = (city, fetchInterval) => {\r\n    // custom fetch hook for fetching weather and forecast\r\n    // This function fetches weather and forecast on these conditions \r\n    // 1. on mount\r\n    // 2. on selected interval\r\n    // 3. on city change\r\n\r\n\t// weather states\r\n\tconst [weather, setWeather] = useState({});\r\n\tconst [forecast, setForecast] = useState({});\r\n\r\n    // weather fetch functions\r\n    async function fetchWeather() {\r\n        const res = await fetch(`${weatherAPICallBaseURL}?q=${city}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`);\r\n        const weather = await res.json();\r\n        setWeather(weather)\r\n    }\r\n\r\n    async function fetchForecast() {\r\n        const res = await fetch(`${forecastAPICallBaseURL}?q=${city}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`);\r\n        const forecast = await res.json();\r\n        setForecast(forecast)\r\n    }\r\n\r\n    // useEffect with interval for auto updates\r\n\tuseEffect(() => {\r\n\r\n        const fetchTimer = setInterval(() => {\r\n            console.log(\"Weather updated\");\r\n\r\n            fetchWeather();\r\n            fetchForecast();\r\n        }, fetchInterval);\r\n\r\n\t\tfetchWeather();\r\n\t\tfetchForecast();\r\n\r\n        return () => {\r\n            clearInterval(fetchTimer);\r\n        };\r\n\r\n\t}, [city]);  // fetch weather again on city change\r\n\r\n    return [weather, setWeather, forecast, setForecast]\r\n}\r\n\r\nexport default useWeatherFetch;","// react\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// statics\r\nimport { weatherAPICallBaseURL } from \"../statics/URLS\";\r\nimport DEFAULTS from \"../statics/DEFAULTS\";\r\n\r\n// custom hooks\r\nimport { useDebounce } from '@react-hook/debounce';\r\nimport useStateWithAutoSave from \"./useStateWithAutoSave\";\r\n\r\n\r\nconst useCitySearch = () => {\r\n\r\n\t// settings menu states\r\n\tconst [citySearch, setCitySearch] = useDebounce(\"\", DEFAULTS.cityFormDebounceTime);\r\n\tconst [isCityValid, setIsCityValid] = useState(\"\");\r\n\tconst [city, setCity] = useStateWithAutoSave(DEFAULTS.storageNames.city);\r\n\r\n\t// on citySearch\r\n\tuseEffect(() => {\r\n\t\tasync function testCity() {\r\n            // uses bootstrap messages like \"is-valid\" \r\n\r\n\t\t\tif (citySearch) {\r\n\t\t\t\ttry {\r\n                    // try to fetch weather data for city\r\n                    const res = await fetch(`${weatherAPICallBaseURL}?q=${citySearch}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`);\r\n                    const weather = await res.json();\r\n                    \r\n                    // if city is valid\r\n\t\t\t\t\tif (weather.cod === 200) {\r\n\r\n\t\t\t\t\t\t// display message\r\n\t\t\t\t\t\tsetIsCityValid(\"is-valid\");\r\n\r\n\t\t\t\t\t\t// change city to the searched city (changing state of the city automatically saves it to storage and updates the ui see useWeatherFetch custom hook)\r\n\t\t\t\t\t\tsetCity(citySearch);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if city is not valid display city invalid message\r\n\t\t\t\t\t\tsetIsCityValid(\"is-invalid\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch {\r\n\t\t\t\t\t// if something is broken display city invalid message\r\n\t\t\t\t\tsetIsCityValid(\"is-invalid\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if city textbox is empty don't display any message\r\n\t\t\t\tsetIsCityValid(\"\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttestCity();\r\n\t}, [citySearch]);\r\n\r\n\r\n    return [city, setCity, citySearch, setCitySearch, isCityValid, setIsCityValid]\r\n}\r\n\r\nexport default useCitySearch;","import { useState, useEffect } from \"react\";\r\n\r\nconst useSystemThemeDetector = () => {\r\n\t// returns trie if system theme is dark\r\n\r\n\tconst getCurrentTheme = () => window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n\tconst [isDarkTheme, setIsDarkTheme] = useState(getCurrentTheme());\r\n\tconst mqListener = (e => {setIsDarkTheme(e.matches);});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\t\tdarkThemeMq.addEventListener('change', mqListener);\r\n\t\treturn () => darkThemeMq.removeEventListener('change', mqListener);\r\n\t}, []);\r\n\treturn isDarkTheme;\r\n}\r\n\r\nexport default useSystemThemeDetector;","// react\r\nimport { useEffect } from \"react\";\r\n\r\n// custom hooks\r\nimport useStateWithAutoSave from \"./useStateWithAutoSave\";\r\nimport useSystemThemeDetector from \"./useSystemThemeDetector\";\r\n\r\n// statics\r\nimport DEFAULTS from \"../statics/DEFAULTS\";\r\n\r\nconst useTheme = () => {\r\n    // theme hook for both using system theme and user selected theme\r\n    // uses useSystemThemeDetector for detecting system theme\r\n\r\n    // theme and useSystemTheme options will be auto saved to the storage on change\r\n\tconst [theme, setTheme] = useStateWithAutoSave(DEFAULTS.storageNames.theme);\r\n\tconst [useSystemTheme, setUseSystemTheme] = useStateWithAutoSave(DEFAULTS.storageNames.useSystemTheme);\r\n\tconst isPreferredThemeDark = useSystemThemeDetector();\r\n\r\n\tuseEffect(() => {\r\n\t\t// change theme with using system theme, on system theme change\r\n\r\n\t\tif (useSystemTheme) {\r\n\t\t\tif (isPreferredThemeDark) {\r\n\t\t\t\tsetTheme(\"dark\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetTheme(\"light\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t// storage.setToStorage({ useSystemTheme: useSystemTheme });\r\n\t}, [theme, useSystemTheme, isPreferredThemeDark])\r\n\r\n\treturn [theme, setTheme, useSystemTheme, setUseSystemTheme];\r\n}\r\n\r\nexport default useTheme;","import { useEffect } from 'react';\r\nimport UNITS from \"../statics/UNITS\";\r\nimport { convertTemp } from \"../helpers/convertUnits\";\r\n\r\nconst useDynamicTitle = (weather, unit) => {\r\n    // dynamically changes the title of the application\r\n\r\n\tuseEffect(() => {\r\n\t\tif(weather.main){\r\n\t\t\tdocument.title = `WTF: ${weather.name} ${convertTemp({ temp: weather.main.temp, unit: unit })}${UNITS[unit].temp}`;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdocument.title = \"WTForecast\";\r\n\t\t}\r\n\t}, [weather, unit])\r\n\r\n}\r\n\r\nexport default useDynamicTitle;","// bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n// styled components\r\nimport GlobalStyles from \"./styles/GlobalStyles\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\n// custom font (handlee)\r\nimport \"@fontsource/handlee\";\r\n\r\n// inner components\r\nimport Header from \"./components/header/Header\";\r\nimport Card1 from \"./components/card1/Card1\";\r\nimport Card2 from \"./components/card2/Card2\";\r\nimport Card3 from \"./components/card3/Card3\";\r\n\r\n// statics\r\nimport THEMES from \"./statics/THEMES\";\r\nimport DEFAULTS from \"./statics/DEFAULTS\";\r\n\r\n// custom hooks\r\nimport useStateWithAutoSave from './hooks/useStateWithAutoSave';\r\nimport useWeatherFetch from './hooks/useWeatherFetch';\r\nimport useCitySearch from './hooks/useCitySearch';\r\nimport useTheme from './hooks/useTheme';\r\nimport useDynamicTitle from './hooks/useDynamicTitle';\r\n\r\n\r\nfunction App() {\r\n\r\n\t// Settings states\r\n\tconst [unit, setUnit] = useStateWithAutoSave(DEFAULTS.storageNames.unit);\r\n\tconst [customUIElements, setCustomUIElements] = useStateWithAutoSave(DEFAULTS.storageNames.customUIElements);\r\n\r\n\t// Custom city search hook, see function description\r\n\tconst [city, setCity, citySearch, setCitySearch, isCityValid, setIsCityValid] = useCitySearch();\r\n\r\n\t// Custom weather fetch hook, see function description\r\n\tconst [weather, setWeather, forecast, setForecast] = useWeatherFetch(city, DEFAULTS.weatherFetchInterval);\r\n\r\n\t// Custom theme hook, see function description\r\n\tconst [theme, setTheme, useSystemTheme, setUseSystemTheme] = useTheme();\r\n\r\n\t// Dynamic title\r\n\tuseDynamicTitle(weather, unit);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ThemeProvider theme={THEMES[theme] ? THEMES[theme] : THEMES[DEFAULTS.storageDefaults.theme]}>\r\n\t\t\t\t<GlobalStyles />\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<Card1\r\n\t\t\t\t\tweather={weather}\r\n\r\n\t\t\t\t\tisCityValid={isCityValid}\r\n\t\t\t\t\tsetCitySearch={setCitySearch}\r\n\r\n\t\t\t\t\tunit={unit}\r\n\t\t\t\t\tsetUnit={setUnit}\r\n\r\n\t\t\t\t\tcustomUIElements={customUIElements}\r\n\t\t\t\t\tsetCustomUIElements={setCustomUIElements}\r\n\r\n\t\t\t\t\ttheme={theme}\r\n\t\t\t\t\tsetTheme={setTheme}\r\n\t\t\t\t\tuseSystemTheme={useSystemTheme}\r\n\t\t\t\t\tsetUseSystemTheme={setUseSystemTheme}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Card2 forecast={forecast} unit={unit} />\r\n\t\t\t\t<Card3 forecast={forecast} unit={unit} />\r\n\t\t\t</ThemeProvider>\r\n\t\t</Container>\r\n\t);\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}